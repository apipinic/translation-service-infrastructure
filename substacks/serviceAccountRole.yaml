AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an IAM role for EKS service account with access to DynamoDB and S3.

Parameters:
  OIDCProviderArn:
    Type: String
    Description: The OIDC Provider URL/ARN for the EKS cluster.

  OIDCProviderURLWithoutHTTPS:
    Type: String
    Description: The OIDC Provider URL for the EKS cluster without https

  Namespace:
    Type: String
    Default: document-cloud
    Description: The Kubernetes namespace where the service account resides.

  RoleName:
    Type: String
    Default: EKS-DynamoDB-S3-Role
    Description: The name of the IAM role to create.

Resources:
  EKSServiceAccountRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref RoleName
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Federated": "${OIDCProviderArn}"
                    },
                    "Action": "sts:AssumeRoleWithWebIdentity",
                    "Condition": {
                        "StringEquals": {
                            "${OIDCProviderURLWithoutHTTPS}:sub": "system:serviceaccount:${Namespace}:dynamo-users"
                        }
                    }
                }
            ]
          }
        - OIDCProviderArn: !Ref OIDCProviderArn
          OIDCProviderURLWithoutHTTPS: !Ref OIDCProviderURLWithoutHTTPS
          Namespace: !Ref Namespace


      Policies:
        - PolicyName: EKSDynamoDBS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Query'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:DeleteItem'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                Resource: '*'

Outputs:
  EKSServiceAccountRoleArn:
    Description: The ARN of the EKS service account role
    Value: !GetAtt EKSServiceAccountRole.Arn
